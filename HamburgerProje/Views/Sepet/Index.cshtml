
@{
}
<div class="container">

    <div class="row" style="margin-top:150px">

        <div class="col-12 col-sm-6 ">
            <ul id="siparisListe" class="shadow list-group-item-action  list-group list-group-flush p-2 card card-header" style="top:18%;">
            </ul>
        </div>

        <div class="col-sm-6  mb-3 mb-sm-0">
            <div class="shadow p-2 card card-header mb-2" style="top:18%;">
                <h4 class='text-center'><b>İletişim Bilgileri</b></h4>
                <div class="mb-2 d-flex justify-content-around">
                    <div>
                        <input placeholder="Ad" type="text" class="form-control" />
                    </div>
                    <div>
                        <input placeholder="Soyad" type="text" class="form-control" />
                    </div>
                </div>
                <textarea placeholder="Adres..." rows="4" class="form-control align-self-center" style="width:89%"></textarea>
                <div class="card-footer"></div>
            </div>

            <div class="shadow p-2 mt-5 card card-header mb-2" style="top:18%;">
                <h4 class='text-center'><b>Ödeme Yöntemi</b></h4>

                <div class="d-flex justify-content-around">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1">
                        <label class="form-check-label" for="flexRadioDefault1">
                            Kredi Kartı
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault2" checked>
                        <label class="form-check-label" for="flexRadioDefault2">
                            Nakit
                        </label>
                    </div>
                </div>
                <div id="krediKartiFormu" style="display:none">
                    <input placeholder="Kart Sahibinin Adı Soyadı..." type="text" class="form-control mt-1" />
                    <input placeholder="Kart Numaranız..." type="text" class="form-control mt-1" />
                    <div class="my-2 d-flex justify-content-around">
                        <div>
                            <input placeholder="Son Kullanma Tarihi" type="text" class="form-control" />
                        </div>
                        <div>
                            <input placeholder="CVC" type="text" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="card-footer d-flex mt-4 justify-content-evenly">
                    <button onclick="siparisOnay()" class="btn btn-success">Ödemeyi Yap</button>
                    <button onclick="siparisIptal()" class="btn btn-danger">İptal</button>
                </div>
            </div>

        </div>
    </div>
</div>




@section Scripts{
    <script>

        // Kredi kartı seçildiğinde form gösterilir
        $('#flexRadioDefault1').click(function () {
                $('#krediKartiFormu').slideDown("fast");
                $("#krediKartiFormu").css("display", "block");
            });

        // Nakit seçildiğinde form gizlenir
        $('#flexRadioDefault2').click(function () {
            $('#krediKartiFormu').slideUp("fast");
        });


    sepeteEkle();
    menuleriListele();
    soslariListele();
    icecekleriListele();
    ekstralariListele();
    hamburgerleriListele();

    //Sepetteki Menüleri listeliyoruz
    function menuleriListele() {
    let url = "@Url.Action("SepettekiMenuler", "Sepet")";

    fetch(url)
        .then(res => res.json())
        .then(veri => {
            $("#menuler").html("");
            $("#menuler").append("Menüler");

            for (const key in veri) {
                $(`#menuler`).append(
                    `
                    <p> ${veri[key]} adet ${key}, </p>
                    `
                )
            }
        })
    }
    //Sepetteki Menüleri listeliyoruz end

    //Sepetteki Hamburgerleri listeliyoruz
    function hamburgerleriListele() {
    let url = "@Url.Action("SepettekiHamburgerler", "Sepet")";

    fetch(url)
        .then(res => res.json())
        .then(veri => {
            $("#hamburgerler").html("");
            $("#hamburgerler").append("Hamburgerler");

            for (const key in veri) {
                $(`#hamburgerler`).append(
                    `
                    <p> ${veri[key]} adet ${key}, </p>
                    `
                )
            }
        })
    }
    //Sepetteki Hamburgerleri listeliyoruz end

    //Sepetteki İçecekleri listeliyoruz
    function icecekleriListele() {
    let url = "@Url.Action("SepettekiIcecekler", "Sepet")";

    fetch(url)
        .then(res => res.json())
        .then(veri => {
            $("#icecekler").html("");
            $("#icecekler").append("İçecekler");

            for (const key in veri) {
                $(`#icecekler`).append(
                    `
                    <p> ${veri[key]} adet ${key}, </p>
                    `
                )
            }
        })
    }
    //Sepetteki İçecekleri listeliyoruz end

    //Sepetteki Sosları listeliyoruz
        function soslariListele() {
    let url = "@Url.Action("SepettekiSoslar", "Sepet")";

    fetch(url)
        .then(res => res.json())
        .then(veri => {
            $("#soslar").html("");
            $("#soslar").append("Soslar");

            for (const key in veri) {
                $(`#soslar`).append(
                    `
                    <p> ${veri[key]} adet ${key}, </p>
                    `
                )
            }
        })
    }
    //Sepetteki Sosları listeliyoruz end


    //Sepetteki Ekstralari listeliyoruz
    function ekstralariListele() {
    let url = "@Url.Action("SepettekiEkstralar", "Sepet")";

    fetch(url)
        .then(res => res.json())
        .then(veri => {
            $("#ekstralar").html("");
            $("#ekstralar").append("Ekstralar");

            for (const key in veri) {
                $(`#ekstralar`).append(
                    `
                    <p> ${veri[key]} adet ${key}, </p>
                    `
                )
            }
        })
    }
    //Sepetteki Ekstralari listeliyoruz end

    // Siparişi listeye ekleme
    function sepeteEkle() {
        let url = "@Url.Action("SiparisListesi", "SiparisOlustur")";
        fetch(url)
            .then(res => res.text())
            .then(data => {
                $("#siparisListe").html("");
                $("#siparisListe").append("<h4 class='text-center'><b>Sepetim</b></h4>");
                const jsonData = JSON.parse(data);
                let top = 0;
                //Hamburgerlerin ad ve adet bilgilerini içeren dictionary
                const hamburgerDict = {};
                for (const hmb of jsonData.hamburgerler) {
                    if (hmb.ad in hamburgerDict) {
                        hamburgerDict[hmb.ad].adet++;
                    } else {
                        hamburgerDict[hmb.ad] = { adet: 1, fiyat: hmb.fiyat, id: hmb.id };
                    }
                }

                for (const ad in hamburgerDict) {
                    const { adet, fiyat, id } = hamburgerDict[ad];
                    const toplamFiyat = adet * fiyat;
                    top += toplamFiyat;
                    $("#siparisListe").append(
                        `
                             <li class="list-group-item list-group-item-info list-group-item-action d-flex justify-content-between align-items-baseline">
                                <span>
                                    ${adet} x ${ad}
                                    <span class="fw-bold">(${toplamFiyat.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }) })</span>
                                </span>
                                <button onclick="sepettenSeciliHmbCikar('${id}')" class="btn text-danger" ><i class="fa-solid fa-trash me-1"></i></button>
                             </li>
                        `
                    );
                }
                //

                // İçeceklerin ad ve adet bilgilerini içeren dictionary
                const icecekDict = {};
                for (const icecek of jsonData.icecekler) {
                    if (icecek.ad in icecekDict) {
                        icecekDict[icecek.ad].adet++;
                    } else {
                        icecekDict[icecek.ad] = { adet: 1, fiyat: icecek.fiyat, id: icecek.id };
                    }
                }

                for (const ad in icecekDict) {
                    const { adet, fiyat, id } = icecekDict[ad];
                    const toplamFiyat = adet * fiyat;
                    top += toplamFiyat;
                    $("#siparisListe").append(
                        `
                             <li class="list-group-item list-group-item-info list-group-item-action d-flex justify-content-between align-items-baseline">
                                <span>
                                    ${adet} x ${ad}
                                    <span class="fw-bold">(${toplamFiyat.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }) })</span>
                                </span>
                                <button onclick="sepettenSeciliIcecekCikar('${id}')" class="btn text-danger" ><i class="fa-solid fa-trash me-1"></i></button>
                             </li>
                        `
                    )
                }
                //

                // Sosların ad ve adet bilgilerini içeren dictionary
                const sosDict = {};
                for (const sos of jsonData.soslar) {
                    if (sos.ad in sosDict) {
                        sosDict[sos.ad].adet++;
                    } else {
                        sosDict[sos.ad] = { adet: 1, fiyat: sos.fiyat, id: sos.id };
                    }
                }

                for (const ad in sosDict) {
                    const { adet, fiyat, id } = sosDict[ad];
                    const toplamFiyat = adet * fiyat;
                    top += toplamFiyat;
                    $("#siparisListe").append(
                        `
                             <li class="list-group-item list-group-item-info list-group-item-action d-flex justify-content-between align-items-baseline">
                                <span>
                                    ${adet} x ${ad}
                                    <span class="fw-bold">(${toplamFiyat.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }) })</span>
                                </span>
                                <button onclick="sepettenSeciliSosCikar('${id}')" class="btn text-danger" ><i class="fa-solid fa-trash me-1"></i></button>
                             </li>
                        `
                    )
                }
                //

                // Menülerin ad ve adet bilgilerini içeren dictionary
                const menuDict = {};
                for (const menu of jsonData.menuler) {
                    if (menu.ad in menuDict) {
                        menuDict[menu.ad].adet++;
                    } else {
                        menuDict[menu.ad] = { adet: 1, fiyat: menu.fiyat, id: menu.id };
                    }
                }

                for (const ad in menuDict) {
                    const { adet, fiyat, id } = menuDict[ad];
                    const toplamFiyat = adet * fiyat;
                    top += toplamFiyat;
                    $("#siparisListe").append(
                        `
                             <li class="list-group-item list-group-item-info list-group-item-action d-flex justify-content-between align-items-baseline">
                                <span>
                                    ${adet} x ${ad}
                                    <span class="fw-bold">(${toplamFiyat.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }) })</span>
                                </span>
                                <button onclick="sepettenSeciliMenuCikar('${id}')" class="btn text-danger" ><i class="fa-solid fa-trash me-1"></i></button>
                             </li>
                        `
                    )
                }
                //

                // Ekstra ad ve adet bilgilerini içeren dictionary
                const ekstraDict = {};
                for (const ekstra of jsonData.ekstralar) {
                    if (ekstra.ad in ekstraDict) {
                        ekstraDict[ekstra.ad].adet++;
                    } else {
                        ekstraDict[ekstra.ad] = { adet: 1, fiyat: ekstra.fiyat, id: ekstra.id };
                    }
                }

                for (const ad in ekstraDict) {
                    const { adet, fiyat, id } = ekstraDict[ad];
                    const toplamFiyat = adet * fiyat;
                    top += toplamFiyat;
                    $("#siparisListe").append(
                        `
                             <li class="list-group-item list-group-item-info list-group-item-action d-flex justify-content-between align-items-baseline">
                                <span>
                                    ${adet} x ${ad}
                                    <span class="fw-bold">(${toplamFiyat.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }) })</span>
                                </span>
                                <button onclick="sepettenSeciliEkstraCikar('${id}')" class="btn text-danger" ><i class="fa-solid fa-trash me-1"></i></button>
                             </li>
                        `
                    )
                }
                //
                $("#siparisListe").append(
                    `
                              <li class="list-group-item text-center list-group-item-warning  list-group-item-action align-items-baseline"> <b>Toplam tutar: ${top.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' })}</b>
                              </li>
                    `
                )
            })
    }
    // fonksiyon sonu


    // sepetten seçili ekstra çıkarma
    function sepettenSeciliEkstraCikar(id) {
        let url = "@Url.Action("SepettenSeciliEkstraCikar", "SiparisOlustur")?id=" + id;
        fetch(url)
            .then(res => res.text())
            .then(data => {
                $("#siparisListe").html("");
                sepeteEkle();
                ekstralariListele();
                IcerikVarmi();

            })
    }
    // sepetten seçili ekstra çıkarma end


    // sepetten seçili menu çıkarma
    function sepettenSeciliMenuCikar(id) {
        let url = "@Url.Action("SepettenSeciliMenuCikar", "SiparisOlustur")?id=" + id;
        fetch(url)
            .then(res => res.text())
            .then(data => {
                $("#siparisListe").html("");
                sepeteEkle();
                menuleriListele();
                IcerikVarmi();

            })
    }
    // sepetten seçili menu çıkarma end

    // sepetten seçili sos çıkarma
    function sepettenSeciliSosCikar(id) {
        let url = "@Url.Action("SepettenSeciliSosCikar", "SiparisOlustur")?id=" + id;
        fetch(url)
            .then(res => res.text())
            .then(data => {
                $("#siparisListe").html("");
                sepeteEkle();
                soslariListele();
                IcerikVarmi();


            })
    }
    // sepetten seçili sos çıkarma end


    // sepetten seçili icecek çıkarma
    function sepettenSeciliIcecekCikar(id) {
        let url = "@Url.Action("SepettenSeciliIcecekCikar", "SiparisOlustur")?id=" + id;
        fetch(url)
            .then(res => res.text())
            .then(data => {
                $("#siparisListe").html("");
                sepeteEkle();
                icecekleriListele();
                IcerikVarmi();

            })
    }
    // sepetten seçili icecek çıkarma end

    // sepetten seçili hamburger çıkarma
    function sepettenSeciliHmbCikar(id) {
        let url = "@Url.Action("SepettenSeciliHmbCikar", "SiparisOlustur")?id=" + id;
        fetch(url)
            .then(res => res.text())
            .then(data => {
                $("#siparisListe").html("");
                sepeteEkle();
                hamburgerleriListele();
                IcerikVarmi();
            })
    }
    // sepetten seçili icecek çıkarma end

    // siparişi iptal etme
    function sepetiBosalt() {
        let url = "@Url.Action("SepetiBosalt", "SiparisOlustur")";
        fetch(url)
            .then(res => res.text())
            .then(() => {
                $("#siparisListe").html("<h4 class='text-center'><b>Sepetim</b></h4>");
                IcerikVarmi();
            });
    }

    function siparisIptal() {
        Swal.fire({
            title: 'Sepeti boşaltmak istediğinize emin misiniz?',
            text: "Sepetteki ürünler silinecektir",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Evet, sil!',
            cancelButtonText: 'Hayır!'
        })
            .then((result) => {
                if (result.isConfirmed) {
                    sepetiBosalt()

                    Swal.fire({
                        title: 'Sepet boşaltıldı',
                        icon: 'error',
                        timer: 3000,
                        timerProgressBar: true,
                        showConfirmButton: false,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                }
            })
    }
    // siparişi iptal etme end



    // siparişi onaylama
    function sepetiOnayla() {
        let url = "@Url.Action("SepetiOnayla", "Sepet")";
        fetch(url)
            .then(res => res.text())
            .then(() => {
                IcerikVarmi();
                $("#siparisListe").html("<h4 class='text-center'><b>Sepetim</b></h4>");
            })
    }


    function siparisOnay() {
        Swal.fire({
            title: 'Sepetinizi onaylamak istediğinizden emin misiniz?',
            text: "Sepetiniz onaylanacaktır",
            icon: 'success',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Evet, onayla!',
            cancelButtonText: 'Hayır!'
        })
            .then((result) => {
                if (result.isConfirmed) {
                    sepetiOnayla();

                    Swal.fire({
                        title: 'Siparişiniz alınmıştır',
                        icon: 'success',
                        timer: 3000,
                        timerProgressBar: true,
                        showConfirmButton: false,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })


                }
            })
    }

    // siparişi onaylama end
    </script>
}